CREATE PROCEDURE RestoreDB2Base AS 
BEGIN;
	/* 
	EXEC RestoreDB2Base;
	*/
	PRINT 'Delete exiting history schema tables';
	IF OBJECT_ID('history.[ACAD_PROGRAMS]', 'U') IS NOT NULL
		DROP TABLE history.[ACAD_PROGRAMS]
	IF OBJECT_ID('history.[COURSE_SECTIONS]', 'U') IS NOT NULL
		DROP TABLE history.COURSE_SECTIONS
	IF OBJECT_ID('history.[NON_COURSE]', 'U') IS NOT NULL
		DROP TABLE history.NON_COURSE
	IF OBJECT_ID('history.[TERMS]', 'U') IS NOT NULL
		DROP TABLE history.TERMS

	PRINT 'Delete exiting input schema tables';
	IF OBJECT_ID('input.[ACAD_PROGRAMS]', 'U') IS NOT NULL
		DROP TABLE input.[ACAD_PROGRAMS]
	IF OBJECT_ID('input.[COURSE_SECTIONS]', 'U') IS NOT NULL
		DROP TABLE input.COURSE_SECTIONS
	IF OBJECT_ID('input.[NON_COURSE]', 'U') IS NOT NULL
		DROP TABLE input.NON_COURSE
	IF OBJECT_ID('input.[TERMS]', 'U') IS NOT NULL
		DROP TABLE input.TERMS

	PRINT 'Delete exiting history schema views';
	IF OBJECT_ID('history.[ACAD_PROGRAMS__ACPG_ADMISSION]', 'V') IS NOT NULL
		DROP VIEW history.ACAD_PROGRAMS__ACPG_ADMISSION
	IF OBJECT_ID('history.[ACAD_PROGRAMS__ACPG_STANDING_RULES]', 'V') IS NOT NULL
		DROP VIEW history.ACAD_PROGRAMS__ACPG_STANDING_RULES
	IF OBJECT_ID('history.[ACAD_PROGRAMS__PROGRAM_STATUS]', 'V') IS NOT NULL
		DROP VIEW history.ACAD_PROGRAMS__PROGRAM_STATUS
	IF OBJECT_ID('history.[ACAD_PROGRAMS_Current]', 'V') IS NOT NULL
		DROP VIEW history.[ACAD_PROGRAMS_Current]
	IF OBJECT_ID('history.[COURSE_SECTIONS__SEC_CONTACT]', 'V') IS NOT NULL
		DROP VIEW history.COURSE_SECTIONS__SEC_CONTACT
	IF OBJECT_ID('history.[COURSE_SECTIONS__SEC_STATUSES]', 'V') IS NOT NULL
		DROP VIEW history.COURSE_SECTIONS__SEC_STATUSES
	IF OBJECT_ID('history.[COURSE_SECTIONS_Current]', 'V') IS NOT NULL
		DROP VIEW history.COURSE_SECTIONS_Current
	IF OBJECT_ID('history.[NON_COURSE_Current]', 'V') IS NOT NULL
		DROP VIEW history.NON_COURSE_Current
	IF OBJECT_ID('history.[TERMS_Current]', 'V') IS NOT NULL
		DROP VIEW history.TERMS_Current
	
	PRINT 'Recreate history schema tables';
	SELECT * INTO history.ACAD_PROGRAMS FROM base_history.[ACAD_PROGRAMS];
	SELECT * INTO history.COURSE_SECTIONS FROM base_history.COURSE_SECTIONS;
	SELECT * INTO history.NON_COURSE FROM base_history.NON_COURSE;
	SELECT * INTO history.TERMS FROM base_history.TERMS;

	PRINT 'Recreate input schema tables';
	SELECT * INTO input.ACAD_PROGRAMS FROM base_input.[ACAD_PROGRAMS];
	SELECT * INTO input.COURSE_SECTIONS FROM base_input.COURSE_SECTIONS;
	SELECT * INTO input.NON_COURSE FROM base_input.NON_COURSE;
	SELECT * INTO input.TERMS FROM base_input.TERMS;

	PRINT 'Recreate history schema views';
	DECLARE @name NVARCHAR(100)
	DECLARE @def NVARCHAR(MAX)
	DECLARE @getid CURSOR

	SET @getid = CURSOR FOR
		SELECT TABLE_NAME 
		  FROM INFORMATION_SCHEMA.VIEWS
		 WHERE TABLE_SCHEMA = 'base_history'

	OPEN @getid
	FETCH NEXT FROM @getid INTO @name
	WHILE @@FETCH_STATUS = 0
	BEGIN
		SELECT @def = VIEW_DEFINITION FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_SCHEMA = 'base_history' AND TABLE_NAME = @name
		EXEC sys.sp_executesql @def
		FETCH NEXT FROM @getid INTO @name
	END

	CLOSE @getid
	DEALLOCATE @getid
END;